#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LEF	1
#define RIG	2
#define FNC	3
#define SYS	4

/ {
    behaviors {
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };
        ssh: shift_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			flavor = "balanced";
			bindings = <&sk>, <&kp>;
		};
		ohn: other_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			flavor = "balanced";
			bindings = <&tog>, <&mo>;
		};
	};

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
            &kp Q           &kp W           &kp F           &kp P           	&kp B                                           &kp J           &kp L           &kp U           &kp Y           &kp SEMI
            &kp A           &lhm LCTRL R    &lhm LALT S     &lhm LGUI T     	&kp G                                           &kp M           &rhm LGUI N     &rhm LALT E     &rhm LCTRL I    &kp O
            &kp Z           &kp X           &kp C           &kp D           	&kp V                                           &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH
                                                            &ohn LEF LEF		&ssh LSHIFT LSHIFT                  			&kp SPACE       &mo RIG

            >;
        };

        lef {
            bindings = <
            &trans          &kp LPAR          		&kp RPAR          		&kp KP_PLUS          	&kp KP_MINUS            	&kp KP_DOT     		&kp KP_N7       &kp KP_N8       &kp KP_N9  	 		&trans
            &trans          &lhm LCTRL LEFT_BRACKET &lhm LALT RIGHT_BRACKET &lhm LGUI KP_MULTIPLY   &kp KP_DIVIDE           	&kp KP_COMMA   		&rhm LGUI KP_N4 &rhm LALT KP_N5 &rhm LCTRL KP_N6    &trans
            &trans          &kp LEFT_BRACE          &kp RIGHT_BRACE         &kp EQUAL          		&kp BSLH                	&kp KP_N0       	&kp KP_N1       &kp KP_N2       &kp KP_N3   		&trans
                                                                            &trans					&mo SYS     				&trans				&trans
            >;
        };

        rig {
            bindings = <
            &kp TAB         &trans          &kp PG_UP       &trans          &kp INS                                     	&trans 		    &kp LCTRL      	&kp DEL       	&kp BSPC        &trans
            &kp LEFT        &kp DOWN        &kp UP  	    &kp RIGHT       &trans                                        	&kp ENTER       &kp LEFT_GUI    &kp LEFT_ALT    &kp LEFT_CTRL   &kp LEFT_SHIFT 
            &kp ESC         &kp HOME		&kp PG_DN		&kp END			&trans                                    		&trans			&trans			&trans			&trans			&trans
                                                                            &trans	&trans          						&trans 		    &trans
            >;
        };

        fnc {
            bindings = <
            &kp EXCL        &kp AT          &kp HASH        &kp DOLLAR      &kp PERCENT                                     &kp CARET		&kp AMPERSAND   &kp ASTERISK    &kp PLUS  &kp UNDERSCORE
            &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                                          &kp F6          &kp F7          &kp F8          &kp F9    &kp F10
            &kp PIPE     	&kp TILDE       &trans          &kp SQT         &trans                                          &trans          &trans          &trans          &kp F11   &kp F12
                                                                            &trans          &trans          &trans          &trans
            >;
        };
		
		sys {
            bindings = <
            &bt BT_SEL 0    &bt BT_SEL 1	&bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR_ALL                                 	&none          &none          &none          &none    &none
            &none          	&none          	&none          	&none          	&none                                          	&none          &none          &none          &none    &none
            &bootloader     &none          	&none          	&none          	&none                                          	&none          &none          &none          &none    &none
                                                                            &none          	&trans          &trans          &none
            >;
        };
    };
};

&lt {
    // require-prior-idle-ms = <100>;
    tapping-term-ms = <150>;
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

&sk {
    release-after-ms = <500>;
    quick-release;
};