#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LEF  1
#define RIG  2
#define TRI  3
#define SETTINGS 4


//#define BASE 0
//#define NAV  1
//#define SYM  2
//#define ADJ  3


#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            // quick_tap_ms = <0>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        sabk: shift_to_alt_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp LA(BSPC)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sym_bspc: left_thumb_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&sabk>;
        };
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";
				// both right thumb keys
        combo_accent {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo TRI>;
        };
			    // internal-left & external-right thumb keys
		combo_sym2 {
				timeout-ms = <200>;
				key-positions = <31 33>;
				bindings = <&mo SYM2>;
		};
				// both left thumb keys
		combo_settings {
				timeout-ms = <300>;
				key-positions = <30 31>;
				bindings = <&mo SETTINGS>;
		};
        		// Enter
		combo_settings {
				timeout-ms = <300>;
				key-positions = <16 17 18>;
				bindings = <&kp ENTER>;
		};
        		// Escape
		combo_settings {
				timeout-ms = <300>;
				key-positions = <1 2>;
				bindings = <&kp ESC>;
		};
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
            &kp Q           &kp W           &kp F           &kp P           &kp B                                           &kp J           &kp L           &kp U           &kp Y           AS(SEMI)
            &kp A           &lhm LCTRL R    &lhm LALT S     &lhm LGUI T     &kp G                                           &kp M           &rhm LGUI N     &rhm LALT E     &rhm LCTRL I    &kp O
            &kp Z           &kp X           &kp C           &kp D           &kp V                                           &kp K           &kp H           AS(COMMA)       AS(DOT)         AS(FSLH)
                                                                            &mo LEF &kp SPACE	               &smart_shift	&mo RIG
            >;
        };

        lef {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                                          &kp PAGE_UP     &kp HOME        &kp UP          &kp END         &trans
            &trans          &kp LCTRL       &kp LALT        &kp LGUI        &trans                                          &kp PAGE_DOWN   &kp LEFT        &kp DOWN        &kp RIGHT       &kp DEL
            &trans          &trans          &trans          &trans          &trans                                          &trans          &trans          &trans          &trans          &trans
                                                                            &mo SYM         &kp LSHFT       &trans          &trans
            >;
        };

        rig {
            bindings = <
            &kp N1          &kp N2          &kp N3                      &kp N4          &kp N5                                          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0
            &kp LESS_THAN   &kp PERCENT     &kp LEFT_PARENTHESIS        &kp LEFT_BRACE  &kp LEFT_BRACKET                                &kp EQUAL       &kp QUESTION    &kp SQT         &kp PLUS        &kp STAR
            &kp GREATER_THAN &kp DOLLAR     &k RIGHT_PARENTHESIS        &kp RIGHT_BRACE &kp RIGHT_BRACKET                               &trans          &trans          &kp DOUBLE_QUOTES         &kp MINUS       &kp SLASH
                                                                        &trans          &trans                              &trans      &trans
            >;
        };

        settings {
            bindings = <
            &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR_ALL                                  &kp C_SLEEP     &trans          &trans          &kp C_BRI_DN    &kp C_BRI_UP
            &trans          &trans          &trans          &trans          &trans                                          &trans          &trans          &trans          &kp C_VOL_DN    &kp C_VOL_UP
            &bootloader     &trans          &trans          &trans          &trans                                          &trans          &trans          &trans          &trans          &bootloader
                                                                            &trans          &trans          &trans          &trans
            >;
        };
        tri {
            bindings = <
            &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                                          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10
            &trans          &trans          &trans          &trans          &trans                                          &kp F11         &kp F12         &trans          &trans          &trans
            &trans          &trans          &trans          &trans          &trans                                          &trans          &trans          &trans          &trans          &trans
                                                                            &trans         &trans           &trans          &trans
            >;
        };
    };
};

&lt {
    // require-prior-idle-ms = <100>;
    tapping-term-ms = <150>;
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

&sk {
    release-after-ms = <500>;
    quick-release;
};